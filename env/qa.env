################################################################################################################
#   AWS VPC + SUBNET Testing Environment Configuration – CREATE + DELETE                                      #
################################################################################################################

# Base API URL
izo_mcn_url = "http://3.111.234.240:8081"

################################################################################################################
#   AWS Cloud Configuration                                                                                    #
################################################################################################################

aws_access_key_id        = "AKIAVFIWJC3EAYBVN4PT"
aws_secret_access_key    = "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"
aws_alternative_access_key  = "AKIAVFIWJC3EIVDZUJRH"
aws_alternative_secret_key  = "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"

aws_account_id           = 1          # integer
aws_default_region       = "us-east-2"
aws_cloud_provider       = "aws"
aws_organization_name    = "caltestorg"     # header value
tenant_id                = "tata"     # header value (added for DELETE)

################################################################################################################
#   VPC Creation – Default Values                                                                              #
################################################################################################################

vpc_default_cidr_block   = "10.0.0.0/16"
vpc_name_prefix          = "test-vpc"
vpc_stack_name_prefix    = "vpc-stack"
vpc_cloud_resource_group = ""

vpc_default_tags = {
    "Environment": "Test",
    "Project":     "MCN-AWS-VPC-Testing",
    "Owner":       "QA-Team",
    "CreatedBy":   "Automation"
}

# Single creation-scenario payload
vpc_creation_scenario = {
    "cidrBlock":          "10.0.0.0/16",
    "cloudAccountId":     1,
    "cloudProvider":      "aws",
    "cloudRegion":        "us-east-2",
    "cloudResourceGroup": "",
    "name":               "successful-test-vpc",
    "stackName":          "successful-vpc-stack",
    "tags": {
        "Name":        "successful-test-vpc",
        "Environment": "Test",
        "Type":        "DetailedLogging"
    }
}

################################################################################################################
#   VPC Deletion – Additional Settings                                                                         #
################################################################################################################

# Supply the VPC ID to delete at run-time via CLI  ( --vpc-id vpc-xxxxxxxx )
# Leave the placeholder here so the variable exists for local scripting.
vpc_id_for_deletion = ""

# Default DELETE payload model (may be overridden on CLI)
vpc_delete_payload = {
    "cloudAccountId": aws_account_id,
    "cloudProvider":  aws_cloud_provider,
    "cloudRegion":    aws_default_region
}

################################################################################################################
#   SUBNET Creation – Default Values                                                                           #
################################################################################################################

subnet_default_cidr_block = "10.0.1.0/24"
subnet_name_prefix        = "test-subnet"
subnet_stack_name_prefix  = "subnet-stack"
subnet_cloud_resource_group = ""

# Default VPC ID for subnet creation (can be overridden in tests)
subnet_default_vpc_id     = "vpc-0123456789abcdef0"

subnet_default_tags = {
    "Environment": "Test",
    "Project":     "MCN-AWS-Subnet-Testing",
    "Owner":       "QA-Team",
    "CreatedBy":   "Automation"
}

# Single subnet creation-scenario payload
subnet_creation_scenario = {
    "cloudAccountId":     1,
    "cloudProvider":      "aws",
    "cloudRegion":        "us-east-2",
    "cloudResourceGroup": "",
    "stackName":          "successful-subnet-stack",
    "subnetCidr":         "10.0.1.0/24",
    "vpcId":              "vpc-0123456789abcdef0"
}

################################################################################################################
#   SUBNET Deletion – Additional Settings                                                                      #
################################################################################################################

# Supply the Subnet ID to delete at run-time via CLI  ( --subnet-id subnet-xxxxxxxx )
# Leave the placeholder here so the variable exists for local scripting.
subnet_id_for_deletion = ""

# Default SUBNET DELETE payload model (same as VPC delete model)
subnet_delete_payload = {
    "cloudAccountId": aws_account_id,
    "cloudProvider":  aws_cloud_provider,
    "cloudRegion":    aws_default_region
}

################################################################################################################
#   Expected API Response Codes                                                                                #
################################################################################################################

expected_status_codes = {
    # VPC CREATE
    "vpc_create_success":          200,
    "vpc_create_bad_request":      400,
    # VPC DELETE
    "vpc_delete_success":          200,
    "vpc_delete_not_found":        404,
    # SUBNET CREATE
    "subnet_create_success":       200,
    "subnet_create_bad_request":   400,
    # SUBNET DELETE
    "subnet_delete_success":       200,
    "subnet_delete_not_found":     404,
    # Common
    "bad_request":                 400,
    "unauthorized":                401,
    "forbidden":                   403,
    "internal_server_error":       500
}

expected_response_messages = {
    "vpc_created":    "Created VPC/VNet successfully",
    "vpc_deleted":    "success",                # substring expected in delete-success body
    "subnet_created": "Created subnet successfully",
    "subnet_deleted": "success"                 # substring expected in delete-success body
}

################################################################################################################
#   HTTP Headers                                                                                               #
################################################################################################################

default_headers = {
    "Content-Type":     "application/json",
    "Accept":           "application/json",
    "User-Agent":       "MCN-VPC-Subnet-Test-Client/1.0",
    "organization-name": aws_organization_name,
    "tenant-id":         tenant_id
}

################################################################################################################
#   Runtime / Logging / Cleanup                                                                               #
################################################################################################################
log_level            = "INFO"
log_file             = "aws_vpc_subnet_test.log"
http_request_timeout = 30
http_retry_count     = 3
http_retry_delay     = 2

# Test state variables
VPC_ID               = ""      # Will be filled by creation test
SUBNET_ID            = ""      # Will be filled by subnet creation test
CREATED_VPC_IDS      = []
CREATED_SUBNET_IDS   = []

# Cleanup settings
cleanup_enabled      = True
cleanup_resources    = { 
    "vpcs": [], 
    "subnets": [] 
}

################################################################################################################
#   Usage Examples for CLI                                                                                     #
################################################################################################################

# VPC Delete Example:
# pytest --env qa --vpc-id vpc-0123456789abcdef0 api/vpc/steps/test_vpc_delete.py -v -s --log-cli-level=INFO

# Subnet Delete Example:
# pytest --env qa --subnet-id subnet-0123456789abcdef0 api/vpc/steps/test_subnet_delete.py -v -s --log-cli-level=INFO

# Subnet Create Example:
# pytest --env qa api/vpc/steps/test_subnet_create.py -v -s --log-cli-level=INFO
