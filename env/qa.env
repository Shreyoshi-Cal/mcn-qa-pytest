################################################################################################################
#   AWS VPC Testing Environment Configuration                                                                  #
################################################################################################################

# Base API URL
izo_mcn_url = "http://3.111.234.240:8081"

################################################################################################################
#   AWS Cloud Configuration                                                                                    #
################################################################################################################

# AWS Credentials
aws_access_key_id = "AKIAVFIWJC3EAYBVN4PT"
aws_secret_access_key = "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"
aws_alternative_access_key = "AKIAVFIWJC3EIVDZUJRH"
aws_alternative_secret_key = "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"

# AWS Account Configuration
aws_account_id = 1                          # Cloud account ID (integer as per API model)
aws_default_region = "us-east-1"            # Default region for VPC creation
aws_cloud_provider = "aws"                  # Cloud provider identifier
aws_organization_name = "caltestorg"        # Organization name for API headers

# AWS VPC Default Configuration
vpc_default_cidr_block = "10.0.0.0/16"     # Default CIDR block for VPC creation
vpc_name_prefix = "test-vpc"                # Prefix for VPC names in tests
vpc_stack_name_prefix = "vpc-stack"         # Prefix for Pulumi stack names
vpc_cloud_resource_group = ""               # Empty for AWS (not applicable)

# Default VPC Tags
vpc_default_tags = {
    "Environment": "Test",
    "Project": "MCN-AWS-VPC-Testing",
    "Owner": "QA-Team",
    "CreatedBy": "Automation"
}

################################################################################################################
#   VPC Delete Configuration                                                                                   #
################################################################################################################

# VPC ID for Delete Operations (CONFIGURABLE)
# Set this to a specific VPC ID you want to delete in tests
# Leave empty to use dynamically created VPC IDs from test execution
vpc_id_for_deletion = ""  # Example: "vpc-045ba18d476543f1e"

# Delete VPC Payload Model - matches API requirement
# {
#   "cloudAccountId": 1,
#   "cloudProvider": "aws", 
#   "cloudRegion": "us-east-1"
# }
vpc_delete_payload = {
    "cloudAccountId": 1,
    "cloudProvider": "aws",
    "cloudRegion": "us-east-1"
}

# Alternative delete configurations for different scenarios
vpc_delete_configurations = {
    "us_east": {
        "cloudAccountId": 1,
        "cloudProvider": "aws",
        "cloudRegion": "us-east-1"
    },
    "us_west": {
        "cloudAccountId": 1,
        "cloudProvider": "aws", 
        "cloudRegion": "us-west-2"
    }
}

################################################################################################################
#   VPC Test Scenarios Data                                                                                    #
################################################################################################################

# Core test scenarios for VPC creation and deletion
vpc_test_scenarios = {
    "create_vpc": {
        "cidrBlock": "10.0.0.0/16",
        "cloudAccountId": 1,
        "cloudProvider": "aws",
        "cloudRegion": "us-east-1",
        "cloudResourceGroup": "",
        "name": "successful-test-vpc",
        "stackName": "successful-vpc-stack",
        "tags": {
            "Name": "successful-test-vpc",
            "Environment": "Test",
            "Type": "Basic"
        }
    },
    "delete_vpc": {
        "cidrBlock": "10.2.0.0/16",
        "cloudAccountId": 1,
        "cloudProvider": "aws",
        "cloudRegion": "us-east-1",
        "cloudResourceGroup": "",
        "name": "delete-test-vpc",
        "stackName": "delete-test-stack",
        "tags": {
            "Name": "delete-test-vpc",
            "Environment": "Test",
            "Type": "Delete"
        }
    }
}

################################################################################################################
#   Expected API Response Configuration                                                                        #
################################################################################################################

# Expected HTTP status codes (updated based on actual API behavior)
expected_status_codes = {
    "vpc_create_success": 200,              # API returns 200 for successful creation
    "vpc_delete_success": 200,              # DELETE requests return 200
    "vpc_create_bad_request": 400,
    "vpc_delete_not_found": 404,
    "unauthorized": 401,
    "forbidden": 403,
    "internal_server_error": 500
}

# Expected response messages
expected_response_messages = {
    "vpc_created": "Created VPC/VNet successfully",
    "vpc_deleted": "VPC deleted successfully"
}

################################################################################################################
#   HTTP Headers Configuration                                                                                #
################################################################################################################

# Organization configuration
organization_name = "caltestorg"  # Correct organization name

# Default headers for API requests
default_headers = {
    "Content-Type": "application/json",
    "Accept": "application/json",
    "User-Agent": "MCN-VPC-Test-Client/1.0",
    "organization-name": "caltestorg"  # Required header
}

# Request timeout settings
http_request_timeout = 30                   # Timeout for HTTP requests in seconds
http_retry_count = 3                        # Number of retries for failed requests
http_retry_delay = 2                        # Delay between retries in seconds

################################################################################################################
#   Test State Variables                                                                                       #
################################################################################################################

# VPC Test State (populated during test execution)
VPC_ID = ""                                 # Stores created VPC ID during tests
CREATED_VPC_IDS = []                        # List of all VPC IDs created during test session

# Current test context - gets updated during test execution
current_test_context = {
    "vpc_id": "",           # Currently active VPC ID
    "account_id": 1,        # Account ID being used
    "region": "us-east-1",  # Region being used
    "provider": "aws"       # Cloud provider
}

################################################################################################################
#   Delete VPC Helper Functions                                                                               #
################################################################################################################

def get_vpc_delete_payload(region="us-east-1", account_id=1):
    """
    Helper function to generate VPC delete payload
    
    Args:
        region (str): AWS region for the VPC
        account_id (int): Cloud account ID
        
    Returns:
        dict: Delete payload matching API model
    """
    return {
        "cloudAccountId": account_id,
        "cloudProvider": "aws",
        "cloudRegion": region
    }

def get_test_vpc_id():
    """
    Helper function to get VPC ID for testing
    
    Returns:
        str: VPC ID or empty string if not set
    """
    return vpc_id_for_deletion

################################################################################################################
#   Cleanup Configuration                                                                                      #
################################################################################################################

# Cleanup settings
cleanup_enabled = True                      # Enable automatic cleanup
cleanup_on_test_failure = True             # Clean up resources even if test fails
cleanup_timeout = 60                       # Timeout for cleanup operations in seconds
cleanup_retry_count = 3                    # Number of retries for cleanup operations

# Resources to track for cleanup
cleanup_resources = {
    "vpcs": []                             # List of VPC IDs to cleanup
}

# VPC IDs to always attempt cleanup (manually specified)
manual_cleanup_vpc_ids = [
    # Add VPC IDs here that should always be cleaned up
    # Example: "vpc-045ba18d476543f1e",
]

################################################################################################################
#   Logging Configuration                                                                                      #
################################################################################################################

# Logging settings
log_level = "INFO"                         # Logging level (DEBUG, INFO, WARNING, ERROR)
log_format = "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
log_file = "aws_vpc_tests.log"            # Log file name

# Debug settings
debug_mode = True                          # Enable debug logging
log_full_responses = True                  # Log full API responses
log_request_details = True                 # Log request details

################################################################################################################
#   Usage Examples                                                                                            #
################################################################################################################

# Example 1: Set a specific VPC ID for deletion testing
# vpc_id_for_deletion = "vpc-045ba18d476543f1e"

# Example 2: Configure delete payload for different region
# vpc_delete_payload = {
#     "cloudAccountId": 1,
#     "cloudProvider": "aws",
#     "cloudRegion": "us-west-2"  # Different region
# }

# Example 3: Add VPC IDs to manual cleanup list
# manual_cleanup_vpc_ids = [
#     "vpc-045ba18d476543f1e",
#     "vpc-0182ffa56cad829fb"
# ]
